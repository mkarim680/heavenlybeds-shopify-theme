/*
Generated time: September 29, 2025 15:03
This file was created by the app developer. Feel free to contact the original developer with any questions. It was minified (compressed) by AVADA. AVADA do NOT own this script.
*/
class CompareUtil{static getSelectedProducts(){return theme.storageUtil.get("compare-products",!0)||[]}static setSelectedProducts(e){theme.storageUtil.set("compare-products",e)}static addToCompare(t,e,a){var r=CompareUtil.getSelectedProducts();r.some(e=>e.id===t)||r.push({id:t,url:e}),CompareUtil.setSelectedProducts(r),CompareUtil.updateCompareCounters(r.length),a&&CompareUtil.updateCompareCheckboxes()}static removeFromCompare(t,e){let a=CompareUtil.getSelectedProducts();a=a&&a.filter(e=>e.id!==t),CompareUtil.setSelectedProducts(a),CompareUtil.updateCompareCounters(a.length),e&&(CompareUtil.updateCompareCheckboxes(),theme.elementUtil.remove(document.getElementById("compare-basket-"+t)),theme.elementUtil.remove(document.querySelectorAll(".compare-col--"+t)))}static clearCompare(t){var e=CompareUtil.getSelectedProducts();e&&e.forEach(e=>{CompareUtil.removeFromCompare(e.id,t)})}static updateCompareCheckboxes(){let e=CompareUtil.getSelectedProducts();document.querySelectorAll(".js-compare-checkbox").forEach(t=>{t.checked=e.filter(e=>e.id===t.dataset.productId).length})}static getCompareCount(){return CompareUtil.getSelectedProducts().length}static updateCompareCounters(e){let t=e||CompareUtil.getCompareCount();document.querySelectorAll(".js-compare-counter").forEach(e=>{e.innerText=t})}}if(!customElements.get("compare-drawer")){class u extends SideDrawer{constructor(){super(),this.openDrawerButton=document.querySelector(".js-open-compare-drawer"),this.compareBasketArea=this.querySelector(".js-compare-basket"),this.loadingSpinner=this.querySelector(".loading-spinner"),this.doCompareButton=this.querySelector(".js-trigger-compare"),this.clearButton=this.querySelector(".js-clear-compare"),this.maxCompare=this.dataset.maxCompare,this.compareModal=document.querySelector(".js-compare-modal"),this.init(),this.bindEvents()}disconnectedCallback(){document.removeEventListener("click",this.clickHandler),document.removeEventListener("change",this.changeHandler),document.removeEventListener("on:facet-filters:updated",CompareUtil.updateCompareCheckboxes)}init(){CompareUtil.updateCompareCheckboxes(),CompareUtil.updateCompareCounters(),this.toggleCompareButton(),setTimeout(()=>{this.openDrawerButton.removeAttribute("style"),this.openDrawerButton.classList.add("transition-ready")},500),this.compareModal.querySelector(".details-modal").classList.remove("hidden")}bindEvents(){this.clickHandler=this.handleClick.bind(this),this.changeHandler=this.handleChange.bind(this),document.addEventListener("click",this.clickHandler),document.addEventListener("change",this.changeHandler),document.addEventListener("on:facet-filters:updated",CompareUtil.updateCompareCheckboxes),this.doCompareButton.addEventListener("click",this.handleDoCompareClick.bind(this)),this.clearButton.addEventListener("click",this.handleClearCompareClick.bind(this))}toggleCompareButton(){0===CompareUtil.getCompareCount()?this.openDrawerButton.classList.add("is-out"):this.openDrawerButton.classList.remove("is-out")}handleClick(e){e.target===this.openDrawerButton?e.target.classList.contains("is-open")?this.close():this.open(e.target):e.target.classList.contains("js-compare-basket-remove")?(CompareUtil.removeFromCompare(e.target.dataset.productId.toString(),!0),this.updateBasketState()):(this.overlay.classList.contains("js-compare-overlay")||e.target.classList.contains("js-close-compare"))&&this.close()}handleChange(e){var t;e.target.classList.contains("js-compare-checkbox")&&(t=e.target.dataset,e.target.checked?CompareUtil.getCompareCount()<this.maxCompare?CompareUtil.addToCompare(t.productId.toString(),t.productUrl,!1):(alert(""+theme.strings.compare.limit.replace("[quantity]",this.maxCompare)),e.target.checked=!1):CompareUtil.removeFromCompare(t.productId.toString(),!1),this.updateBasketState(),0<CompareUtil.getCompareCount())&&this.toggleCompareButton()}handleDoCompareClick(){this.close(),this.compareModal.dispatchEvent(new CustomEvent("on:product-compare-modal:open"),{bubbles:!0})}handleClearCompareClick(){CompareUtil.clearCompare(!0),this.close()}async open(e){e.classList.add("is-open"),this.overlay.classList.add("overlay--over-nav"),this.overlay.classList.add("js-compare-overlay"),super.open(e),this.renderCompareBasket()}close(){this.openDrawerButton.classList.remove("is-open"),this.overlay.classList.remove("overlay--over-nav"),this.overlay.classList.remove("js-compare-overlay"),super.close()}updateBasketState(){var e=CompareUtil.getCompareCount(),t=(this.doCompareButton.setAttribute("aria-disabled",e<2),theme.elementUtil.remove(this.compareBasketArea.querySelector(".js-select-more")),theme.elementUtil.remove(this.compareBasketArea.querySelector(".js-select-one")),`<button class='js-close-compare link'>${theme.strings.compare.continue}</button>`);1===e?this.compareBasketArea.innerHTML+=`<div class='compare-prompt text-sm js-select-more'>${theme.strings.compare.more} ${t}</div>`:0===e&&(this.compareBasketArea.innerHTML+=`<div class='compare-prompt text-sm js-select-one'>${theme.strings.compare.empty} ${t}</div>`)}async renderCompareBasket(){var e=CompareUtil.getSelectedProducts();e&&(this.loadingSpinner.removeAttribute("hidden"),this.loadingSpinner.removeAttribute("aria-hidden"),this.compareBasketArea.classList.remove("revealable--in"),this.compareBasketArea.innerHTML="",(await u.getBasketProducts(e)).forEach(e=>{this.compareBasketArea.innerHTML+=e}),window.initLazyImages(),setTimeout(()=>{this.loadingSpinner.setAttribute("hidden","true"),this.loadingSpinner.setAttribute("aria-hidden","true"),this.compareBasketArea.classList.add("revealable--in"),this.updateBasketState()},100))}static async getBasketProducts(e){let a=[],t=(await Promise.all(e.map(async t=>{await fetch(t.url+"?sections=product-compare-basket").then(e=>e.json()).then(e=>{a[t.id]=e["product-compare-basket"]})})),[]);return e.forEach(e=>t.push(a[e.id])),t}}customElements.define("compare-drawer",u)}